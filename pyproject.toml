[project]
name = "gcpde"
version = "0.1.0"
description = "our opinionated usage of GCP services from a data engineering perspective"
authors = [
    {name = "Wander"}
]
requires-python = ">=3.11"
readme = "README.md"
license = {text = "MIT"}
dependencies = [
    "loguru>=0.7.2,<1.0.0",
    "pydantic>=2.8.2,<3.0.0",
    "tenacity>=9.0.0,<10.0.0",
    "bigquery_schema_generator @ git+https://github.com/bxparks/bigquery-schema-generator@v1.6.1",
    "google-cloud-storage>=3.1.0,<4.0.0",
    "gcloud-aio-storage>=9.3.0,<10.0.0",
    "google-cloud-bigquery>=3.30.0,<4.0.0",
    "pandas>=2.2.3,<3.0.0",
    "funcy>=2.0.0,<3.0.0"
]

[dependency-groups]
dev = [
    "ruff>=0.5.2,<1.0.0",
    "mypy>=1.10.1,<2.0.0",
    "pytest>=8.2.2,<9.0.0",
    "pytest-cov>=5.0.0,<6.0.0",
    "pytest-asyncio>=0.23.7,<1.0.0",
    "time-machine>=2.14.2,<3.0.0"
]

[project.urls]
repository = "https://github.com/wandercom/gcpde"

[tool.ruff]
line-length = 88
indent-width = 4
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "__pycache__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.lint]
select = ["E", "F", "W", "I", "D"]
ignore = [
    "D211",
    "D212",
    "D203",
    "D105",
    "D107"
]

[tool.ruff.lint.per-file-ignores]
"**/{tests}/*" = ["D"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pycodestyle]
max-line-length = 88

[tool.ruff.lint.mccabe]
max-complexity = 12

[tool.ruff.format]
indent-style = "space"

[tool.ruff.lint.isort]
known-first-party = ["gcpde"]

[tool.mypy]
strict = true
ignore_missing_imports = true
plugins = [
    "pydantic.mypy"
]
exclude = [
    "tests/*",
    ".venv/*",
    "venv/*"
]

[tool.pydantic-mypy]
strict = true
init_forbid_extra = false
init_typed = false
warn_required_dynamic_aliases = false
warn_untyped_fields = true

[build-system]
requires = ["pdm-backend", "pip"]
build-backend = "pdm.backend"

[tool.coverage.run]
source = ["gcpde"]
branch = true

[tool.coverage.html]
directory = "tests-cov"

[tool.pytest.ini_options]
addopts = "--cov-report term --cov-report html:tests-cov --cov=gcpde"
